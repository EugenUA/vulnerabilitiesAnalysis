package ui.Vulnerability_Product_Search;

import entities.dbEntities.Description;
import entities.dbEntities.User;
import entities.dbEntities.Vulnerability;
import service.ServiceException;
import service.SimpleService.Service;

import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.List;
import java.util.Scanner;

public class VulnerabilitiesSearch {

    private User user;
    private Service service;
    private Scanner scanner;
    private String key;

    private boolean flag = true;

    public VulnerabilitiesSearch(User user, Service service){
        this.user = user;
        this.service = service;
        this.scanner = new Scanner(System.in);
    }

    public void searchbyVulnerability(){
        while(flag){
            System.out.println();
            System.out.println("------------------- SEARCH VULNERABILITY BY IT'S INFO -----------------");
            System.out.println("LEGEND:");
            System.out.println("PRESS 'C' to search by CVE-number");
            System.out.println("PRESS 'D' to search all vulnerabilities from date");
            System.out.println("PRESS 'I' to search by it's id");
            System.out.println("PRESS 'T' to see vulnerabilities aggregated today");
            System.out.println("PRESS 'Q' to quit");
            System.out.println("USAGE EXAMPLE 1 : D;2018");
            System.out.println("USAGE EXAMPLE 2 : I;200");
            System.out.println("USAGE EXAMPLE 2 : T");
            System.out.print("ENTER the key and the corresponding search criteria: ");
            key = scanner.nextLine();

            if(key.equals("Q") || key.equals("q")){
                flag = false;
                break;
            }

            String enteredKey = "";
            String enteredCriteria = "";
            String[] parts = key.split(";");

            if(parts.length >= 2) {
                enteredKey = parts[0].trim();
                enteredCriteria = parts[1].trim();
                if(!enteredCriteria.isEmpty()){
                    if(enteredKey.equals("C") || enteredKey.equals("c")){
                        if(enteredCriteria.matches("CVE-\\d{4}-\\d{4,7}")){
                            try {
                                List<Vulnerability> vulnerabilities = service.getVulnerabilityByCVE(enteredCriteria);
                                for(Vulnerability vulnerability : vulnerabilities){
                                    System.out.println("VULNERABILITY: " + vulnerability.getName());
                                    System.out.println("Do you want to see the description? (y/n)");
                                    key = scanner.nextLine();
                                    if(key.equals("y") || key.equals("Y")){
                                        Description description = service.getDescriptionByVulnerability(vulnerability);
                                        System.out.println("DESCRIPTION: ");
                                        System.out.println(description.getLong_description().replaceAll("null",""));
                                    }
                                }
                            } catch (ServiceException e){
                                System.out.println("Your search caused an exception : " + e.getMessage());
                            }
                        } else {
                            System.out.println("Wrong CVE.");
                        }
                    } else if(enteredKey.equals("D") || enteredKey.equals("d")){
                        try{
                            List<Vulnerability> vulnerabilities = service.getVulnerabilitiesByDate(enteredCriteria);
                            System.out.println("FOUND " + vulnerabilities.size() + " VULNERABILITIES");
                            for(Vulnerability vulnerability : vulnerabilities){
                                System.out.println("ID: " + vulnerability.getId() + " NAME: " + vulnerability.getName());
                            }
                        } catch(ServiceException e){
                            System.out.println("Your search caused an exception : " + e.getMessage());
                        }
                    } else if(enteredKey.equals("I") || enteredKey.equals("i")){
                        try{
                            Vulnerability vulnerability = service.getVulnerabilityById(Long.parseLong(enteredCriteria,10));
                            System.out.println("VULNERABILITY: " + vulnerability.getName());
                            System.out.println("Do you want to see the description? (y/n)");
                            key = scanner.nextLine();
                            if(key.equals("y") || key.equals("Y")){
                                Description description = service.getDescriptionByVulnerability(vulnerability);
                                System.out.println("DESCRIPTION: ");
                                System.out.println(description.getLong_description().replaceAll("null",""));
                            }
                        } catch(ServiceException e){
                            System.out.println("Your search caused an exception : " + e.getMessage());
                        }
                    } else {
                        System.out.println("Wrong key");
                    }
                } else {
                    System.out.println("Wrong key or wrong input.");
                }
            } else {
                enteredKey = key;
                if (enteredKey.equals("T") || enteredKey.equals("t")) {
                    try {
                        List<Vulnerability> vulnerabilities = service.getVulnerabilitiesByDate(
                                new SimpleDateFormat("yyyy-MM-dd").format(new Date()));
                        System.out.println("FOUND " + vulnerabilities.size() + " VULNERABILITIES");
                        for(Vulnerability vulnerability : vulnerabilities){
                            System.out.println("ID: " + vulnerability.getId() + " NAME: " + vulnerability.getName());
                        }
                    }catch(ServiceException e){
                        System.out.println("Your search caused an exception : " + e.getMessage());
                    }
                } else {
                    System.out.println("Wrong key or wrong input.");
                }
            }
        }
    }
}
